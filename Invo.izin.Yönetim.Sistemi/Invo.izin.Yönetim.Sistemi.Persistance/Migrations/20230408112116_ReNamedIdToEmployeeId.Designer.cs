// <auto-generated />
using System;
using Invo.izin.Yönetim.Sistemi.Persistance.Contex;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Invo.izin.Yönetim.Sistemi.Persistance.Migrations
{
    [DbContext(typeof(IYSDbContext))]
    [Migration("20230408112116_ReNamedIdToEmployeeId")]
    partial class ReNamedIdToEmployeeId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Invo.izin.Yönetim.Sistemi.Domain.Employee.DepartmentEntity", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(3);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("DepartmentName")
                        .HasColumnOrder(2);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpatedDate")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("Department", "Hr");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(338),
                            DepartmentName = "Bilgi İşlem",
                            Description = "",
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(351),
                            DepartmentName = "Finans",
                            Description = "",
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(352),
                            DepartmentName = "Muhasebe",
                            Description = "",
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(353),
                            DepartmentName = "Satış / Pazarlama",
                            Description = "",
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(355),
                            DepartmentName = "Sevkiyat",
                            Description = "",
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(355),
                            DepartmentName = "Üretim",
                            Description = "",
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)7,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(356),
                            DepartmentName = "Hukuk",
                            Description = "",
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)8,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(357),
                            DepartmentName = "Halkla İlişkiler",
                            Description = "",
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)9,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(358),
                            DepartmentName = "İnsan Kaynakları",
                            Description = "",
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)10,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(359),
                            DepartmentName = "Ar-Ge",
                            Description = "",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Invo.izin.Yönetim.Sistemi.Domain.Employee.EmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte?>("BranchOfficeId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(4);

                    b.Property<byte?>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("tinyint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description")
                        .HasColumnOrder(6);

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EmployeeName")
                        .HasColumnOrder(2);

                    b.Property<string>("EmployeeSurName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("EmployeeSurName")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsHead")
                        .HasColumnType("bit");

                    b.Property<byte?>("LeavePermissionLevelId")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TitleId")
                        .IsRequired()
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpatedDate")
                        .HasColumnOrder(5);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LeavePermissionLevelId");

                    b.HasIndex("TitleId");

                    b.ToTable("Employee", "Hr");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchOfficeId = (byte)1,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(1513),
                            DepartmentId = (byte)1,
                            EmployeeName = "Halil",
                            EmployeeSurName = "ŞAHİN",
                            IsActive = true,
                            IsHead = true,
                            LeavePermissionLevelId = (byte)1,
                            TitleId = (byte)1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BranchOfficeId = (byte)2,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(1517),
                            DepartmentId = (byte)2,
                            EmployeeName = "Ali",
                            EmployeeSurName = "ŞAHİN",
                            IsActive = true,
                            IsHead = false,
                            LeavePermissionLevelId = (byte)2,
                            TitleId = (byte)2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Invo.izin.Yönetim.Sistemi.Domain.Leave.LeaveRequestEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(4);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description")
                        .HasColumnOrder(6);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinishedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FinishedDate")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<decimal>("LeaveTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("LeaveTypeId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartedDate")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpatedDate")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable(" LeaveRequest", "Hr");
                });

            modelBuilder.Entity("Invo.izin.Yönetim.Sistemi.Domain.Parameter.BranchOfficeEntity", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<string>("BranchOfficeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BranchOfficeName")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpatedDate")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable(" BranchOffice", "Hr");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            BranchOfficeName = "İstanbul",
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(599),
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)2,
                            BranchOfficeName = "Ankara",
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(600),
                            IsActive = true
                        },
                        new
                        {
                            Id = (byte)3,
                            BranchOfficeName = "İzmir",
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(601),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Invo.izin.Yönetim.Sistemi.Domain.Parameter.EmployeeTitleEntity", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive")
                        .HasColumnOrder(6);

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TitleName")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpatedDate")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("EmployeeTitle", "Hr");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(1443),
                            IsActive = true,
                            TitleName = "Müdür"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(1446),
                            IsActive = true,
                            TitleName = "Şef"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(1447),
                            IsActive = true,
                            TitleName = "Uzman"
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(1448),
                            IsActive = true,
                            TitleName = "Stajyer"
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(1449),
                            IsActive = true,
                            TitleName = "Genel Müdür"
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(1450),
                            IsActive = true,
                            TitleName = "CEO"
                        });
                });

            modelBuilder.Entity("Invo.izin.Yönetim.Sistemi.Domain.Parameter.LeavePermissionLevelEntity", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive")
                        .HasColumnOrder(6);

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Level")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpatedDate")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("LeavePermissionLevel", "Hr");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(661),
                            IsActive = true,
                            Level = "Birinci Seviye"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(662),
                            IsActive = true,
                            Level = "İkinci Seviye"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(663),
                            IsActive = true,
                            Level = "Üçüncü Seviye"
                        });
                });

            modelBuilder.Entity("Invo.izin.Yönetim.Sistemi.Domain.Parameter.LeaveTypeEntity", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive")
                        .HasColumnOrder(6);

                    b.Property<string>("LeaveTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LeaveTypeName")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpatedDate")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("LeaveType", "Hr");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(532),
                            IsActive = true,
                            LeaveTypeName = "Yıllık İzin"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(534),
                            IsActive = true,
                            LeaveTypeName = "Süt İzni"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(534),
                            IsActive = true,
                            LeaveTypeName = "Mazeret İzni"
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(535),
                            IsActive = true,
                            LeaveTypeName = "Doğum Sonrası İzin"
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(536),
                            IsActive = true,
                            LeaveTypeName = "Evilik İzni"
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(536),
                            IsActive = true,
                            LeaveTypeName = "Hastalık İzni"
                        },
                        new
                        {
                            Id = (byte)7,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(537),
                            IsActive = true,
                            LeaveTypeName = "Askerlik"
                        },
                        new
                        {
                            Id = (byte)8,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(538),
                            IsActive = true,
                            LeaveTypeName = "Ücretsiz İzin"
                        },
                        new
                        {
                            Id = (byte)9,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(538),
                            IsActive = true,
                            LeaveTypeName = "Taşınma İzni"
                        },
                        new
                        {
                            Id = (byte)10,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(539),
                            IsActive = true,
                            LeaveTypeName = "Devamsızlık"
                        },
                        new
                        {
                            Id = (byte)11,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(540),
                            IsActive = true,
                            LeaveTypeName = "Hizmete Ara Verme"
                        },
                        new
                        {
                            Id = (byte)12,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(540),
                            IsActive = true,
                            LeaveTypeName = "Zorunluluk Hali"
                        },
                        new
                        {
                            Id = (byte)13,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(541),
                            IsActive = true,
                            LeaveTypeName = "Yol İzni"
                        },
                        new
                        {
                            Id = (byte)14,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(541),
                            IsActive = true,
                            LeaveTypeName = "Mesai İzni"
                        },
                        new
                        {
                            Id = (byte)15,
                            CreatedDate = new DateTime(2023, 4, 8, 14, 21, 16, 287, DateTimeKind.Local).AddTicks(542),
                            IsActive = true,
                            LeaveTypeName = "İş Aktivitesi"
                        });
                });

            modelBuilder.Entity("Invo.izin.Yönetim.Sistemi.Domain.Employee.EmployeeEntity", b =>
                {
                    b.HasOne("Invo.izin.Yönetim.Sistemi.Domain.Parameter.BranchOfficeEntity", "BranchOffice")
                        .WithMany()
                        .HasForeignKey("BranchOfficeId");

                    b.HasOne("Invo.izin.Yönetim.Sistemi.Domain.Employee.DepartmentEntity", "Department")
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invo.izin.Yönetim.Sistemi.Domain.Parameter.LeavePermissionLevelEntity", "LeavePermissionLevel")
                        .WithMany()
                        .HasForeignKey("LeavePermissionLevelId");

                    b.HasOne("Invo.izin.Yönetim.Sistemi.Domain.Parameter.EmployeeTitleEntity", "Title")
                        .WithMany("Employees")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BranchOffice");

                    b.Navigation("Department");

                    b.Navigation("LeavePermissionLevel");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Invo.izin.Yönetim.Sistemi.Domain.Employee.DepartmentEntity", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Invo.izin.Yönetim.Sistemi.Domain.Parameter.EmployeeTitleEntity", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
